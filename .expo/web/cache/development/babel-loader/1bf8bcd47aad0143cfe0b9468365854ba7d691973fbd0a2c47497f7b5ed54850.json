{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createAccountWithEmail } from \"../../../services/firebase-auth\";\nimport { SvgXml } from \"react-native-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar xmlImg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M160 0c17.7 0 32 14.3 32 32V67.7c1.6 .2 3.1 .4 4.7 .7c.4 .1 .7 .1 1.1 .2l48 8.8c17.4 3.2 28.9 19.9 25.7 37.2s-19.9 28.9-37.2 25.7l-47.5-8.7c-31.3-4.6-58.9-1.5-78.3 6.2s-27.2 18.3-29 28.1c-2 10.7-.5 16.7 1.2 20.4c1.8 3.9 5.5 8.3 12.8 13.2c16.3 10.7 41.3 17.7 73.7 26.3l2.9 .8c28.6 7.6 63.6 16.8 89.6 33.8c14.2 9.3 27.6 21.9 35.9 39.5c8.5 17.9 10.3 37.9 6.4 59.2c-6.9 38-33.1 63.4-65.6 76.7c-13.7 5.6-28.6 9.2-44.4 11V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V445.1c-.4-.1-.9-.1-1.3-.2l-.2 0 0 0c-24.4-3.8-64.5-14.3-91.5-26.3c-16.1-7.2-23.4-26.1-16.2-42.2s26.1-23.4 42.2-16.2c20.9 9.3 55.3 18.5 75.2 21.6c31.9 4.7 58.2 2 76-5.3c16.9-6.9 24.6-16.9 26.8-28.9c1.9-10.6 .4-16.7-1.3-20.4c-1.9-4-5.6-8.4-13-13.3c-16.4-10.7-41.5-17.7-74-26.3l-2.8-.7 0 0C119.4 279.3 84.4 270 58.4 253c-14.2-9.3-27.5-22-35.8-39.6c-8.4-17.9-10.1-37.9-6.1-59.2C23.7 116 52.3 91.2 84.8 78.3c13.3-5.3 27.9-8.9 43.2-11V32c0-17.7 14.3-32 32-32z\"/></svg>';\nexport default function CriarContaScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var handleCreateAccount = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (password !== confirmPassword) {\n        Alert.alert(\"Erro\", \"As senhas não coincidem.\");\n        return;\n      }\n      try {\n        yield createAccountWithEmail(email, password);\n        Alert.alert(\"Conta criada com sucesso. Faça o Login.\", \"\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            setTimeout(function () {\n              navigation.replace(\"Login\");\n            }, 1000);\n          }\n        }]);\n      } catch (error) {\n        Alert.alert(\"Erro ao criar conta\");\n      }\n    });\n    return function handleCreateAccount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(SvgXml, {\n      xml: xmlImg,\n      style: styles.icon,\n      onPress: function onPress() {\n        return navigation.navigate(\"Inicio\");\n      }\n    }), _jsxs(View, {\n      style: styles.menu,\n      children: [_jsx(TextInput, {\n        placeholderTextColor: \"#000000\",\n        style: styles.input,\n        placeholder: \"E-mail\",\n        onChangeText: setEmail,\n        value: email,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\"\n      }), _jsx(View, {\n        style: styles.spacer\n      }), _jsx(TextInput, {\n        placeholderTextColor: \"#000000\",\n        style: styles.input,\n        placeholder: \"Senha\",\n        onChangeText: setPassword,\n        value: password,\n        secureTextEntry: true\n      }), _jsx(View, {\n        style: styles.spacer\n      }), _jsx(TextInput, {\n        placeholderTextColor: \"#000000\",\n        style: styles.input,\n        placeholder: \"Confirmar Senha\",\n        onChangeText: setConfirmPassword,\n        value: confirmPassword,\n        secureTextEntry: true\n      }), _jsx(View, {\n        style: styles.spacer\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonLogin,\n        onPress: handleCreateAccount,\n        children: _jsx(Text, {\n          style: styles.txtLogin,\n          children: \"Criar Conta\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    fontFamily: \"Roboto\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#0FEC32\"\n  },\n  menu: {\n    borderTopLeftRadius: 100,\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"60%\",\n    backgroundColor: \"#2B2B2B\"\n  },\n  spacer: {\n    height: 25\n  },\n  icon: {\n    width: 120,\n    height: \"40%\",\n    fill: \"#FFFFFF\",\n    justifyContent: \"center\"\n  },\n  input: {\n    width: \"70%\",\n    height: 40,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: \"#FFFFFF\",\n    color: \"#000000\"\n  },\n  buttonLogin: {\n    backgroundColor: \"#0FEC32\",\n    padding: 10,\n    width: 280,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#52006A\"\n  },\n  txtLogin: {\n    textAlign: \"center\",\n    color: \"#ffffff\",\n    fontSize: 24,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","createAccountWithEmail","SvgXml","jsx","_jsx","jsxs","_jsxs","xmlImg","CriarContaScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","handleCreateAccount","_ref2","_asyncToGenerator","alert","text","onPress","setTimeout","replace","error","apply","arguments","style","styles","container","children","xml","icon","navigate","menu","placeholderTextColor","input","placeholder","onChangeText","value","keyboardType","autoCapitalize","spacer","secureTextEntry","buttonLogin","txtLogin","create","fontFamily","flex","alignItems","justifyContent","backgroundColor","borderTopLeftRadius","flexDirection","width","height","fill","borderRadius","padding","color","shadowColor","textAlign","fontSize","fontWeight"],"sources":["D:/APP_Financeiro/src/screens/Login/CriarConta.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { createAccountWithEmail } from \"../../../services/firebase-auth\";\r\nimport { RootStackParamList } from \"../../../shared/config\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { SvgXml } from \"react-native-svg\";\r\nimport { useFonts, Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\n\r\ntype CriarContaScreenNavigationProp = NativeStackNavigationProp<\r\n  RootStackParamList,\r\n  \"CriarConta\"\r\n>;\r\n\r\ntype Props = {\r\n  navigation: CriarContaScreenNavigationProp;\r\n};\r\nconst xmlImg =\r\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M160 0c17.7 0 32 14.3 32 32V67.7c1.6 .2 3.1 .4 4.7 .7c.4 .1 .7 .1 1.1 .2l48 8.8c17.4 3.2 28.9 19.9 25.7 37.2s-19.9 28.9-37.2 25.7l-47.5-8.7c-31.3-4.6-58.9-1.5-78.3 6.2s-27.2 18.3-29 28.1c-2 10.7-.5 16.7 1.2 20.4c1.8 3.9 5.5 8.3 12.8 13.2c16.3 10.7 41.3 17.7 73.7 26.3l2.9 .8c28.6 7.6 63.6 16.8 89.6 33.8c14.2 9.3 27.6 21.9 35.9 39.5c8.5 17.9 10.3 37.9 6.4 59.2c-6.9 38-33.1 63.4-65.6 76.7c-13.7 5.6-28.6 9.2-44.4 11V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V445.1c-.4-.1-.9-.1-1.3-.2l-.2 0 0 0c-24.4-3.8-64.5-14.3-91.5-26.3c-16.1-7.2-23.4-26.1-16.2-42.2s26.1-23.4 42.2-16.2c20.9 9.3 55.3 18.5 75.2 21.6c31.9 4.7 58.2 2 76-5.3c16.9-6.9 24.6-16.9 26.8-28.9c1.9-10.6 .4-16.7-1.3-20.4c-1.9-4-5.6-8.4-13-13.3c-16.4-10.7-41.5-17.7-74-26.3l-2.8-.7 0 0C119.4 279.3 84.4 270 58.4 253c-14.2-9.3-27.5-22-35.8-39.6c-8.4-17.9-10.1-37.9-6.1-59.2C23.7 116 52.3 91.2 84.8 78.3c13.3-5.3 27.9-8.9 43.2-11V32c0-17.7 14.3-32 32-32z\"/></svg>';\r\n\r\nexport default function CriarContaScreen({ navigation }: Props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleCreateAccount = async () => {\r\n    if (password !== confirmPassword) {\r\n      Alert.alert(\"Erro\", \"As senhas não coincidem.\");\r\n      return;\r\n    }\r\n    try {\r\n      await createAccountWithEmail(email, password);\r\n      // Se a conta for criada com sucesso, você pode querer navegar para a tela Home ou qualquer outra que preferir\r\n      Alert.alert(\"Conta criada com sucesso. Faça o Login.\", \"\", [\r\n        {\r\n          text: \"OK\",\r\n          onPress: () => {\r\n            setTimeout(() => {\r\n              navigation.replace(\"Login\");\r\n            }, 1000); // Aguarda 1 segundo antes de executar a navegação\r\n          },\r\n        },\r\n      ]);\r\n    } catch (error) {\r\n      Alert.alert(\"Erro ao criar conta\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <SvgXml\r\n        xml={xmlImg}\r\n        style={styles.icon}\r\n        onPress={() => navigation.navigate(\"Inicio\")}\r\n      ></SvgXml>\r\n      <View style={styles.menu}>\r\n        <TextInput\r\n          placeholderTextColor={\"#000000\"}\r\n          style={styles.input}\r\n          placeholder=\"E-mail\"\r\n          onChangeText={setEmail}\r\n          value={email}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <View style={styles.spacer} />\r\n        <TextInput\r\n          placeholderTextColor={\"#000000\"}\r\n          style={styles.input}\r\n          placeholder=\"Senha\"\r\n          onChangeText={setPassword}\r\n          value={password}\r\n          secureTextEntry\r\n        />\r\n        <View style={styles.spacer} />\r\n        <TextInput\r\n          placeholderTextColor={\"#000000\"}\r\n          style={styles.input}\r\n          placeholder=\"Confirmar Senha\"\r\n          onChangeText={setConfirmPassword}\r\n          value={confirmPassword}\r\n          secureTextEntry\r\n        />\r\n        <View style={styles.spacer} />\r\n        <TouchableOpacity\r\n          style={styles.buttonLogin}\r\n          onPress={handleCreateAccount}\r\n        >\r\n          <Text style={styles.txtLogin}>Criar Conta</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#0FEC32\",\r\n  },\r\n  menu: {\r\n    borderTopLeftRadius: 100,\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n    backgroundColor: \"#2B2B2B\",\r\n  },\r\n  spacer: {\r\n    height: 25,\r\n  },\r\n  icon: {\r\n    width: 120,\r\n    height: \"40%\",\r\n    fill: \"#FFFFFF\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    width: \"70%\",\r\n    height: 40,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    color: \"#000000\",\r\n  },\r\n  buttonLogin: {\r\n    backgroundColor: \"#0FEC32\",\r\n    padding: 10,\r\n    width: 280,\r\n    height: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#52006A\",\r\n  },\r\n  txtLogin: {\r\n    textAlign: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}